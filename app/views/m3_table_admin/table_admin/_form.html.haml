- if defined?(@object.has_globalize) && @object.has_globalize
  %nav.locales.float-right
    = link_to t('m3_table_admin.edit'), '#', class: 'btn btn-primary edit-form active'
    - (Settings['locales'] - %w(en)).each do |locale|
      = link_to locale, '#', class: 'btn btn-primary', data: { locale: locale }

= simple_form_for [:m3_table_admin, @object], html:{ class: "form-horizontal"} do |f|


  .modal.fade#imyModal
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{"data-dismiss" => "modal", type: "button"}
            %span{"aria-hidden" => "true"} ×
            %span.sr-only Close
          %h4.modal-title Modal title
        .modal-body
          %p One fine body …
        .modal-footer
          %button.btn.btn-default{"data-dismiss" => "modal", type: "button"} Close
          %button.btn.btn-primary{type: "button"} Save changes



  .form-inputs
    - if defined?(@object.has_globalize) && @object.has_globalize
      - (Settings['locales'] - %w(en)).each do |locale|
        %div{class: "locale-#{locale}"}
          %h3= t("admin.offer.form.translation_locale", locale_name: I18n.backend.translate(locale, "locale_name"))
          - @object.class.translated_attribute_names.each do |attr|
            - next if attr == :slug || attr == :search_vector
            - klass = @object.class.columns_hash[attr.to_s].sql_type == 'text' ? 'text' : 'string'
            %span.input.optional{class: klass}
              %label.optional.control-label{class: klass} #{attr.to_s.humanize}
              - if klass == 'text'
                = f.template.text_area_tag "#{@object.class.to_s.underscore.downcase}[attribute_translations][#{locale}][#{attr}]", @object.attribute_translation(attr, locale.to_sym), class: "optional #{klass}"
              - else
                = f.template.text_field_tag "#{@object.class.to_s.underscore.downcase}[attribute_translations][#{locale}][#{attr}]", @object.attribute_translation(attr, locale.to_sym), class: "optional #{klass}"

  .form-inputs.edit-form
    - if @table.filter_locale?
      = hidden_field_tag @table.singularized + "[locale]", @table.filter_locale
    - @table.form_columns.each do |column|
      - if "country" == column
        = f.input column["name"], {:iso_codes => true}
      - if "text" == column["type"]
        = f.input column["name"]
      - elsif "date" == column["type"]
        = f.input column["name"], as: :datepicker
      - elsif "datetime" == column["type"]
        = f.input column["name"], as: :datetimepicker
      - elsif "wysihtml5" == column["type"]
        .wysihtml5-container
          = f.input column["name"], as: :text
        :javascript

          var customTemplates = {
                  custombuttons: function(customOptions) {
                      var size = (customOptions.options && customOptions.options.size) ? ' btn-'+customOptions.options.size : '';
                      return "<li>" +
                      "<a class='btn btn-default' title='my window' tabindex='-1' data-toggle='modal' data-target='#imyModal' data-id='0' class='open-dialog'>" +
                      "<span class='glyphicon glyphicon-comment'></span>" +
                      "</a>" +
                      "</li>";
                  },
                  image: function(locale){
                      var lib = $("#img-library").html();
                      lib = "this is library";
                      //this is a modified copy of https://github.com/Waxolunist/bootstrap3-wysihtml5-bower/blob/master/src/templates/image.hbs
                      return [
                          '<li>'
                          ,'<div class="bootstrap-wysihtml5-insert-image-modal modal fade">'
                          ,'<div class="modal-dialog">'
                          ,'<div class="modal-content">'
                          ,'<div class="modal-header">'
                          ,'<a class="close" data-dismiss="modal">&times;</a>'
                          ,'<h3>Insert image</h3>'
                          ,'</div>'
                          ,'<div class="modal-body img-library">'
                          ,lib
                          ,'</div>'
                          ,'</div>'
                          ,'</div>'
                          ,'</div>'
                          ,'<a class="btn btn-sm btn-default" data-wysihtml5-command="insertImage" title="Insert image" tabindex="-1" style="margin-left:-4px">'
                          ,'<span class="glyphicon glyphicon-picture"></span>'
                          ,'</a>'
                          ,'</li>'
                      ].join('');
                  }
              };

          $("##{@table.singularized+"_"+column['name']}").wysihtml5({
                "toolbar": {
                            "custombuttons": true
                        },
                        customTemplates: customTemplates,

                "events": {
                    "focus": function() {
                        $("##{@table.singularized+"_"+column['name']}").closest(".wysihtml5-container").find(".wysihtml5-toolbar").slideDown();
                    },
                    "blur": function() {
                        //$("##{@table.singularized+"_"+column['name']}").closest(".wysihtml5-container").find(".wysihtml5-toolbar").slideUp();
                    }
                }
            });

      - elsif "checkbox" == column["type"]
        = f.input column["name"], as: :boolean
        =# f.input column["name"], as: :check_boxes, collection: column["attributes"]["collection"]
      - elsif "association" == column["type"]
        = f.association column["name"].to_sym
      - elsif "dropdown" == column["type"]
        - if column["attributes"]
          = f.input column["name"], collection: column["attributes"]["collection"], label_method: lambda { |obj| t(obj) }, value_method: lambda { |obj| obj }
        - else
          = f.input column["name"], collection: column["attributes"]["collection"], prompt: column["attributes"]["prompt"]
      - elsif "country" == column["type"]
        = f.input column["name"], {:iso_codes => true}
      - elsif "json" == column["type"]
        = f.input column["name"], as: :text
      - elsif "image" == column["type"] && @object.image?
        .input-container-with-left-margin
          =image_tag @object.image, :style => "max-width: 200px;margin-bottom:20px"
      - elsif "autocomplete" == column["type"]
        - au_select = column["attributes"]["select"]
        = f.input column["name"], as: :autocomplete
      - elsif "attachment" == column["type"]
        = f.input column["name"]
        - if @object and @object.send(column["name"]).present?
          .attachment-container
            = image_tag @object.send(column["name"], :thumb)





    .form-actions
      %button{:type => "submit", :class => "btn btn-primary btn-lg"}
        = t("m3_table_admin.submit")

